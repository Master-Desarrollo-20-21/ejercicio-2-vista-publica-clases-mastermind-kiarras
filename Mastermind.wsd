@startuml Mastermind
class Mastermind{
  + start()
  - showTitle()
  - exit()
}
Mastermind *--> Game
class Game{
    + Attempt[] : Attempts
    + SecretCombination : secretCombinaton
    + NewAttempt()
    + showSecretCombination() : string
    + showPreviousAttempts()
    - isFinist()
    + showFinalResult()
}
Game *--> "0..10" Attempt
Game *--> SecretCombination

class Attempt{
    - ProposedCombination : proposedCombination
    - Result
    + askProposedCombination() : Combination
}
Attempt *--> ProposedCombination
Attempt *--> Result

abstract class Combination{
    + setPosition() : Char[]
    {abstract} + show()
}
Combination *--> "4" Color
enum Color{
    RED     ("r")
    YELLOW  ("y")
    BLUE    ("b")
    GREEN   ("g")
    PURPLE  ("p")
    ORANGE  ("o")
}
Combination <|-- SecretCombination
Combination <|-- ProposedCombination
Class SecretCombination{
    + setRamdomCombination()
}
Class ProposedCombination{
    - isValidLength()
    - isValidColor() 
}

class Result{
    +checkCombinations(ProposedCombination,SecretCombination)
    +resume()
}
Result o--> SecretCombination
Result o--> ProposedCombination
Result *--> "4" wins
enum wins{
    blacks
    whites
}
package IO{
    Class GestorIO{
        + input()
        + out()
    }
}
Attempt ...> GestorIO
@enduml